# Start from golang base image
FROM golang:1.13-alpine as builder

# Add Maintainer info
LABEL maintainer="Nguyen Hung Khanh <nhk020996@gmail.com>"

# Install git.
# Git is required for fetching the dependencies.
RUN apk update && apk add --no-cache git

# Set the current working directory inside the container 
WORKDIR /usr/src/app

# Copy go mod and sum files 
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and the go.sum files are not changed 
RUN go mod download 

# Copy the source from the current directory to the working Directory inside the container 
COPY . .

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o bin/storyev_api .

# Start a new stage from scratch
FROM alpine:3.11
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage. Observe we also copied the .env file
COPY --from=builder /usr/src/app/bin/storyev_api ./bin/storyev_api
COPY --from=builder /usr/src/app/.env .

RUN mkdir -p files

# Expose port 8080 to the outside world
EXPOSE 8080

#Command to run the executable
CMD ["bin/storyev_api"]